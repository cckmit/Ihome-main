{"version":3,"sources":["webpack://ihome-system-[name]/./src/api/system/index.ts","webpack://ihome-system-[name]/./src/mixins/pagination.ts","webpack://ihome-system-[name]/./node_modules/ihome-common/util/api/http.ts"],"names":["post_job_add","d","post","post_job_delete_ID","post_job_getList","post_job_getListByResourceId","post_job_getListByRoleId","post_job_update","post_org_add","get_org_getAll","get","params","post_org_getList","post_org_update","post_resource_addBatch","post_resource_addResourceToRoleBatch","post_resource_delete_ID","get_resource_get_ID","get_resource_getAll","post_resource_getList","post_resource_update","post_role_add","post_role_addRoleResourceBatch","post_role_addRoleToJobBatch","post_role_addRoleToUserBatch","post_role_delete_ID","get_role_get_ID","post_role_getList","post_role_getListByResourceId","post_role_update","post_user_getList","post_user_getListByResourceId","post_user_getListByRoleId","PaginationMixin","queryPageParameters","resPageInfo","total","list","console","error","log","this","size","pageNum","pageSize","getListMixin","configure","showSpinner","minimum","service","a","create","timeout","interceptors","request","use","config","url","includes","method","Object","keys","forEach","k","oldStr","newStr","replace","data","token","headers","start","Promise","reject","response","done","res","code","message","msg","type","duration","status","originalRequest","indexOf","_retry","err"],"mappings":"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","file":"static/js/chunk-768c84b2.ce233d8b.js","sourcesContent":["/* eslint-disable */\n//Wed Aug 05 2020 09:12:09 GMT+0800 (GMT+08:00)\nimport { request } from '../base'\n/**添加岗位*/\nexport async function post_job_add (d?: JobBaseVO) {\nreturn await request.post< number,number> ('/system/job/add', d)\n}\n/**批量添加岗位角色权限*/\nexport async function post_job_addJobRoleBatch (d?: JobRoleVO) {\nreturn await request.post< boolean,boolean> ('/system/job/addJobRoleBatch', d)\n}\n/**删除岗位*/\nexport async function post_job_delete_ID (d?: any) {\nreturn await request.post< number,number> ('/system/job/delete/{id}', d)\n}\n/**查询岗位详情*/\nexport async function get_job_get_ID (d?: any) {\nreturn await request.get<JobVO,JobVO>('/system/job/get/{id}', { params: d })\n}\n/**查询岗位列表*/\nexport async function post_job_getList (d?: JobQueryVO) {\nreturn await request.post< PageModel<JobVO>,PageModel<JobVO>> ('/system/job/getList', d)\n}\n/**查询拥有指定资源的岗位列表*/\nexport async function post_job_getListByResourceId (d?: JobResourceQueryVO) {\nreturn await request.post< PageModel<JobVO>,PageModel<JobVO>> ('/system/job/getListByResourceId', d)\n}\n/**查询拥有指定角色的岗位列表*/\nexport async function post_job_getListByRoleId (d?: JobRoleQueryVO) {\nreturn await request.post< PageModel<JobVO>,PageModel<JobVO>> ('/system/job/getListByRoleId', d)\n}\n/**修改岗位*/\nexport async function post_job_update (d?: JobUpdateVO) {\nreturn await request.post< number,number> ('/system/job/update', d)\n}\n/**添加组织*/\nexport async function post_org_add (d?: OrgBaseVO) {\nreturn await request.post< number,number> ('/system/org/add', d)\n}\n/**删除组织*/\nexport async function post_org_delete_ID (d?: any) {\nreturn await request.post< number,number> ('/system/org/delete/{id}', d)\n}\n/**查询组织详情*/\nexport async function get_org_get_ID (d?: any) {\nreturn await request.get<OrgVO,OrgVO>('/system/org/get/{id}', { params: d })\n}\n/**查询所有组织*/\nexport async function get_org_getAll (d?: any) {\nreturn await request.get<OrgVO[],OrgVO[]>('/system/org/getAll', { params: d })\n}\n/**查询组织列表*/\nexport async function post_org_getList (d?: OrgQueryVO) {\nreturn await request.post< PageModel<OrgVO>,PageModel<OrgVO>> ('/system/org/getList', d)\n}\n/**修改组织*/\nexport async function post_org_update (d?: OrgUpdateVO) {\nreturn await request.post< number,number> ('/system/org/update', d)\n}\n/**批量添加资源*/\nexport async function post_resource_addBatch (d?: any) {\nreturn await request.post< boolean,boolean> ('/system/resource/addBatch', d)\n}\n/**批量将资源分配给角色*/\nexport async function post_resource_addResourceToRoleBatch (d?: ResourceRoleVO) {\nreturn await request.post< boolean,boolean> ('/system/resource/addResourceToRoleBatch', d)\n}\n/**删除资源*/\nexport async function post_resource_delete_ID (d?: any) {\nreturn await request.post< number,number> ('/system/resource/delete/{id}', d)\n}\n/**查询资源详情*/\nexport async function get_resource_get_ID (d?: any) {\nreturn await request.get<ResourceVO,ResourceVO>('/system/resource/get/{id}', { params: d })\n}\n/**查询所有资源*/\nexport async function get_resource_getAll (d?: any) {\nreturn await request.get<ResourceMinVO[],ResourceMinVO[]>('/system/resource/getAll', { params: d })\n}\n/**查询资源列表*/\nexport async function post_resource_getList (d?: ResourceQueryVO) {\nreturn await request.post< PageModel<ResourceVO>,PageModel<ResourceVO>> ('/system/resource/getList', d)\n}\n/**查询角色拥有的资源*/\nexport async function post_resource_getListByRoleId (d?: ResourceRoleQueryVO) {\nreturn await request.post< PageModel<ResourceMinVO>,PageModel<ResourceMinVO>> ('/system/resource/getListByRoleId', d)\n}\n/**查询用户拥有的资源*/\nexport async function post_resource_getListByUserId (d?: ResourceUserQueryVO) {\nreturn await request.post< PageModel<ResourceMinVO>,PageModel<ResourceMinVO>> ('/system/resource/getListByUserId', d)\n}\n/**修改资源*/\nexport async function post_resource_update (d?: ResourceUpdateVO) {\nreturn await request.post< number,number> ('/system/resource/update', d)\n}\n/**添加角色*/\nexport async function post_role_add (d?: RoleBaseVO) {\nreturn await request.post< number,number> ('/system/role/add', d)\n}\n/**批量添加角色资源权限*/\nexport async function post_role_addRoleResourceBatch (d?: RoleResourceVO) {\nreturn await request.post< boolean,boolean> ('/system/role/addRoleResourceBatch', d)\n}\n/**将角色批量分���给岗位*/\nexport async function post_role_addRoleToJobBatch (d?: RoleJobVO) {\nreturn await request.post< boolean,boolean> ('/system/role/addRoleToJobBatch', d)\n}\n/**将角色批量分配给用户*/\nexport async function post_role_addRoleToUserBatch (d?: RoleUserVO) {\nreturn await request.post< boolean,boolean> ('/system/role/addRoleToUserBatch', d)\n}\n/**删除角色*/\nexport async function post_role_delete_ID (d?: any) {\nreturn await request.post< number,number> ('/system/role/delete/{id}', d)\n}\n/**查询角色详情*/\nexport async function get_role_get_ID (d?: any) {\nreturn await request.get<RoleVO,RoleVO>('/system/role/get/{id}', { params: d })\n}\n/**查询所有角色*/\nexport async function get_role_getAll (d?: any) {\nreturn await request.get<Role[],Role[]>('/system/role/getAll', { params: d })\n}\n/**查询角色列表*/\nexport async function post_role_getList (d?: RoleQueryVO) {\nreturn await request.post< PageModel<RoleVO>,PageModel<RoleVO>> ('/system/role/getList', d)\n}\n/**查询指定岗位拥有的角色列表*/\nexport async function post_role_getListByJobId (d?: RoleJobQueryVO) {\nreturn await request.post< PageModel<RoleVO>,PageModel<RoleVO>> ('/system/role/getListByJobId', d)\n}\n/**查询拥有指定资源的角色列表*/\nexport async function post_role_getListByResourceId (d?: RoleResourceQueryVO) {\nreturn await request.post< PageModel<RoleVO>,PageModel<RoleVO>> ('/system/role/getListByResourceId', d)\n}\n/**查询指定用户拥有的所有角色*/\nexport async function post_role_getListByUserId (d?: RoleUserQueryVO) {\nreturn await request.post< PageModel<RoleVO>,PageModel<RoleVO>> ('/system/role/getListByUserId', d)\n}\n/**修改角色*/\nexport async function post_role_update (d?: RoleUpdateVO) {\nreturn await request.post< number,number> ('/system/role/update', d)\n}\n/**激活用户*/\nexport async function post_user_activate_ID (d?: any) {\nreturn await request.post< boolean,boolean> ('/system/user/activate/{id}', d)\n}\n/**添加用户*/\nexport async function post_user_add (d?: UserBaseVO) {\nreturn await request.post< string,string> ('/system/user/add', d)\n}\n/**批量添加用户岗位及角色*/\nexport async function post_user_addJobAndRoleBatch (d?: UserJobRoleVO) {\nreturn await request.post< boolean,boolean> ('/system/user/addJobAndRoleBatch', d)\n}\n/**批量添加用户组织权限*/\nexport async function post_user_addUserOrgBatch (d?: UserOrgVO) {\nreturn await request.post< boolean,boolean> ('/system/user/addUserOrgBatch', d)\n}\n/**复制用户岗位角色及组织权限*/\nexport async function post_user_copyJobAndRole (d?: UserCopyVO) {\nreturn await request.post< boolean,boolean> ('/system/user/copyJobAndRole', d)\n}\n/**删除用户*/\nexport async function post_user_delete_ID (d?: any) {\nreturn await request.post< number,number> ('/system/user/delete/{id}', d)\n}\n/**查询用户详情*/\nexport async function get_user_get_ID (d?: any) {\nreturn await request.get<UserVO,UserVO>('/system/user/get/{id}', { params: d })\n}\n/**查询用户列表*/\nexport async function post_user_getList (d?: UserQueryVO) {\nreturn await request.post< PageModel<UserVO>,PageModel<UserVO>> ('/system/user/getList', d)\n}\n/**查询拥有指定岗位的用户列表*/\nexport async function post_user_getListByJobId (d?: UserJobQueryVO) {\nreturn await request.post< PageModel<UserVO>,PageModel<UserVO>> ('/system/user/getListByJobId', d)\n}\n/**查询拥有指定资源的用户列表*/\nexport async function post_user_getListByResourceId (d?: UserResourceQueryVO) {\nreturn await request.post< PageModel<UserVO>,PageModel<UserVO>> ('/system/user/getListByResourceId', d)\n}\n/**查询拥有指定角色的用户列表*/\nexport async function post_user_getListByRoleId (d?: UserRoleQueryVO) {\nreturn await request.post< PageModel<UserVO>,PageModel<UserVO>> ('/system/user/getListByRoleId', d)\n}\n/**锁定用户*/\nexport async function post_user_lock_ID (d?: any) {\nreturn await request.post< boolean,boolean> ('/system/user/lock/{id}', d)\n}\n/**通过手机号码重置密码*/\nexport async function post_user_resetPasswordByPhone (d?: any) {\nreturn await request.post< boolean,boolean> ('/system/user/resetPasswordByPhone', d)\n}\n/**修改用户*/\nexport async function post_user_update (d?: UserUpdateVO) {\nreturn await request.post< number,number> ('/system/user/update', d)\n}\n//===============================================================================================\n/**ResModel模型*/\nexport interface ResModel<T> {\n/**是否成功（0 是 -1 否）*/\ncode: number;\n/**响应信息*/\nmsg: string;\n/**返回对象*/\nresult: T;\n}\n/**PageModel模型*/\nexport interface PageModel<T> {\n/**结果集*/\nlist:T[];\n/**总记录数*/\ntotal: number;\n}\n/**undefined*/\nexport interface JobBaseVO {\n/**编码*/\ncode: string;\n/**名称*/\nname: string;\n/**备注*/\nremark: string;\n}\n/**undefined*/\nexport interface JobQueryVO {\n/**key*/\nkey: string;\n/**当前页*/\npageNum: number;\n/**每页条数*/\npageSize: number;\n}\n/**undefined*/\nexport interface JobResourceQueryVO {\n/**关键字*/\nkey: string;\n/**当前页*/\npageNum: number;\n/**每页条数*/\npageSize: number;\n/**资源id*/\nresourceId: number;\n}\n/**undefined*/\nexport interface JobRoleQueryVO {\n/**关键字*/\nkey: string;\n/**当前页*/\npageNum: number;\n/**每页条数*/\npageSize: number;\n/**角色id*/\nroleId: number;\n}\n/**undefined*/\nexport interface JobRoleVO {\n/**undefined*/\njobId: number;\n/**角色id数组*/\nroleIds: undefined[];\n}\n/**undefined*/\nexport interface JobUpdateVO {\n/**编码*/\ncode: string;\n/**id*/\nid: number;\n/**名称*/\nname: string;\n/**备注*/\nremark: string;\n}\n/**undefined*/\nexport interface JobVO {\n/**编码*/\ncode: string;\n/**创建时间(yyyy-MM-dd HH:mm:ss)*/\ncreateTime: string;\n/**创建用户*/\ncreateUser: number;\n/**创建用户姓名*/\ncreateUserName: string;\n/**已删除*/\ndeleted: number;\n/**id*/\nid: number;\n/**intArray*/\nintArray: undefined[];\n/**intList*/\nintList: undefined[];\n/**jobRole*/\njobRole: JobRoleVO;\n/**jobRoleList*/\njobRoleList: JobRoleVO[];\n/**名称*/\nname: string;\n/**备注*/\nremark: string;\n/**更新时间(yyyy-MM-dd HH:mm:ss)*/\nupdateTime: string;\n/**更新用户*/\nupdateUser: number;\n/**更新用户姓名*/\nupdateUserName: string;\n}\n/**undefined*/\nexport interface OrgBaseVO {\n/**关闭日期(yyyy-MM-dd)*/\ncloseDate: string;\n/**部门分类(Business-营业线、Function-职能线)*/\ndepartmentType: string;\n/**名称*/\nname: string;\n/**开业日期(yyyy-MM-dd)*/\nopenDate: string;\n/**组织代码*/\norgCode: string;\n/**组织类型(Company-公司、Department-部门)*/\norgType: string;\n/**父组织id*/\nparentId: number;\n/**简称*/\nshortName: string;\n/**状态(Valid-有效、Invalid-无效)*/\nstatus: string;\n}\n/**undefined*/\nexport interface OrgQueryVO {\n/**部门分类(Business-营业线、Function-职能线)*/\ndepartmentType: string;\n/**组织层级*/\nlevel: number;\n/**名称*/\nname: string;\n/**组织类型(Company-公司、Department-部门)*/\norgType: string;\n/**当前页*/\npageNum: number;\n/**每页条数*/\npageSize: number;\n/**父组织id*/\nparentId: number;\n/**状态(Valid-有效、Invalid-无效)*/\nstatus: string;\n}\n/**undefined*/\nexport interface OrgUpdateVO {\n/**关闭日期(yyyy-MM-dd)*/\ncloseDate: string;\n/**部门分类(Business-营业线、Function-职能线)*/\ndepartmentType: string;\n/**id*/\nid: number;\n/**名称*/\nname: string;\n/**开业日期(yyyy-MM-dd)*/\nopenDate: string;\n/**组织代码*/\norgCode: string;\n/**组织类型(Company-公司、Department-部门)*/\norgType: string;\n/**父组织id*/\nparentId: number;\n/**简称*/\nshortName: string;\n/**状态(Valid-有效、Invalid-无效)*/\nstatus: string;\n}\n/**undefined*/\nexport interface OrgVO {\n/**关闭日期(yyyy-MM-dd)*/\ncloseDate: string;\n/**创建时间(yyyy-MM-dd HH:mm:ss)*/\ncreateTime: string;\n/**创建用户*/\ncreateUser: number;\n/**创建用户姓名*/\ncreateUserName: string;\n/**已删除*/\ndeleted: number;\n/**部门分类(Business-营业线、Function-职能线)*/\ndepartmentType: string;\n/**id*/\nid: number;\n/**组织层级*/\nlevel: number;\n/**名称*/\nname: string;\n/**开业日期(yyyy-MM-dd)*/\nopenDate: string;\n/**组织代码*/\norgCode: string;\n/**组织类型(Company-公司、Department-部门)*/\norgType: string;\n/**父组织id*/\nparentId: number;\n/**简称*/\nshortName: string;\n/**状态(Valid-有效、Invalid-无效)*/\nstatus: string;\n/**更新时间(yyyy-MM-dd HH:mm:ss)*/\nupdateTime: string;\n/**更新用户*/\nupdateUser: number;\n/**更新用户姓名*/\nupdateUserName: string;\n}\n/**undefined*/\nexport interface ResourceBaseVO {\n/**编码*/\ncode: string;\n/**名称*/\nname: string;\n/**父资源id*/\nparentId: number;\n/**类型(Root-资源根节点、System-系统、Service-服务模块、Menu-功能菜单、Api-API、Button-按钮、Element-元素)*/\ntype: string;\n/**url*/\nurl: string;\n}\n/**undefined*/\nexport interface ResourceMinVO {\n/**编码*/\ncode: string;\n/**id*/\nid: number;\n/**名称*/\nname: string;\n/**父资源id*/\nparentId: number;\n/**类型(Root-资源根节点、System-系统、Service-服务模块、Menu-功能菜单、Api-API、Button-按钮、Element-元素)*/\ntype: string;\n}\n/**undefined*/\nexport interface ResourceQueryVO {\n/**关键字*/\nkey: string;\n/**当前页*/\npageNum: number;\n/**每页条数*/\npageSize: number;\n/**父资源id*/\nparentId: number;\n/**类型(Root-资源根节点、System-系统、Service-服务模块、Menu-功能菜单、Api-API、Button-按钮、Element-元素)*/\ntype: string;\n}\n/**undefined*/\nexport interface ResourceRoleQueryVO {\n/**关键字*/\nkey: string;\n/**当前页*/\npageNum: number;\n/**��页条数*/\npageSize: number;\n/**角色id*/\nroleId: number;\n}\n/**undefined*/\nexport interface ResourceRoleVO {\n/**资源id*/\nresourceId: number;\n/**角色id数组*/\nroleIds: undefined[];\n}\n/**undefined*/\nexport interface ResourceUpdateVO {\n/**编码*/\ncode: string;\n/**id*/\nid: number;\n/**名称*/\nname: string;\n/**父资源id*/\nparentId: number;\n/**类型(Root-资源根节点、System-系统、Service-服务模块、Menu-功能菜单、Api-API、Button-按钮、Element-元素)*/\ntype: string;\n/**url*/\nurl: string;\n}\n/**undefined*/\nexport interface ResourceUserQueryVO {\n/**关键字*/\nkey: string;\n/**当前页*/\npageNum: number;\n/**每页条数*/\npageSize: number;\n/**用户id*/\nuserId: number;\n}\n/**undefined*/\nexport interface ResourceVO {\n/**编码*/\ncode: string;\n/**编码后缀*/\ncodeSuffix: string;\n/**创建时间(yyyy-MM-dd HH:mm:ss)*/\ncreateTime: string;\n/**创建用户*/\ncreateUser: number;\n/**创建用户姓名*/\ncreateUserName: string;\n/**已删除*/\ndeleted: number;\n/**id*/\nid: number;\n/**名称*/\nname: string;\n/**父资源编码*/\nparentCode: string;\n/**父资源id*/\nparentId: number;\n/**父资源名称*/\nparentName: string;\n/**类型(Root-资源根节点、System-系统、Service-服务模块、Menu-功能菜单、Api-API、Button-按钮、Element-元素)*/\ntype: string;\n/**更新时间(yyyy-MM-dd HH:mm:ss)*/\nupdateTime: string;\n/**更新用户*/\nupdateUser: number;\n/**更新用户姓名*/\nupdateUserName: string;\n/**url*/\nurl: string;\n}\n/**undefined*/\nexport interface Role {\n/**编码*/\ncode: string;\n/**创建时间(yyyy-MM-dd HH:mm:ss)*/\ncreateTime: string;\n/**创建用户*/\ncreateUser: number;\n/**已删除*/\ndeleted: number;\n/**id*/\nid: number;\n/**名称*/\nname: string;\n/**更新时间(yyyy-MM-dd HH:mm:ss)*/\nupdateTime: string;\n/**更新用户*/\nupdateUser: number;\n}\n/**undefined*/\nexport interface RoleBaseVO {\n/**编码*/\ncode: string;\n/**名称*/\nname: string;\n}\n/**undefined*/\nexport interface RoleJobQueryVO {\n/**岗位id*/\njobId: number;\n/**关键字*/\nkey: string;\n/**当前页*/\npageNum: number;\n/**每页条数*/\npageSize: number;\n}\n/**undefined*/\nexport interface RoleJobVO {\n/**岗位id数组*/\njobIds: undefined[];\n/**角色id*/\nroleId: number;\n}\n/**undefined*/\nexport interface RoleQueryVO {\n/**关��字*/\nkey: string;\n/**当前页*/\npageNum: number;\n/**每页条数*/\npageSize: number;\n}\n/**undefined*/\nexport interface RoleResourceQueryVO {\n/**关键字*/\nkey: string;\n/**当前页*/\npageNum: number;\n/**每页条数*/\npageSize: number;\n/**资源id*/\nresourceId: number;\n}\n/**undefined*/\nexport interface RoleResourceVO {\n/**资源id数组*/\nresourceIds: undefined[];\n/**角色id*/\nroleId: number;\n}\n/**undefined*/\nexport interface RoleUpdateVO {\n/**编码*/\ncode: string;\n/**id*/\nid: number;\n/**名称*/\nname: string;\n}\n/**undefined*/\nexport interface RoleUserQueryVO {\n/**关键字*/\nkey: string;\n/**当前页*/\npageNum: number;\n/**每页条数*/\npageSize: number;\n/**用户id*/\nuserId: number;\n}\n/**undefined*/\nexport interface RoleUserVO {\n/**角色id*/\nroleId: number;\n/**用户id数组*/\nuserIds: undefined[];\n}\n/**undefined*/\nexport interface RoleVO {\n/**编码*/\ncode: string;\n/**创建时间(yyyy-MM-dd HH:mm:ss)*/\ncreateTime: string;\n/**创建用户*/\ncreateUser: number;\n/**创建用户姓名*/\ncreateUserName: string;\n/**已删除*/\ndeleted: number;\n/**id*/\nid: number;\n/**名称*/\nname: string;\n/**更新时间(yyyy-MM-dd HH:mm:ss)*/\nupdateTime: string;\n/**更新用户*/\nupdateUser: number;\n/**更新用户姓名*/\nupdateUserName: string;\n}\n/**undefined*/\nexport interface UserBaseVO {\n/**登录账号*/\naccount: string;\n/**用户类型(Ihome-爱家员工、Juheng-居恒员工、Poly-保顾兼职、Channel-渠道用户、Customer-个人��户、Outsourcing-劳务派遣)*/\naccountType: string;\n/**email*/\nemail: string;\n/**员工工号*/\nemployeeCode: string;\n/**雇员状态(On-在职、Leave-离职)*/\nemployeeStatus: string;\n/**人员类型(Formal-正式工、Probation-试用、Practice-实习、Vacation-暑期工、Rehire-离职返聘)*/\nemployeeType: string;\n/**入职日期(yyyy-MM-dd)*/\nemploymentDate: string;\n/**离职日期(yyyy-MM-dd)*/\nleaveDate: string;\n/**手机号码*/\nmobilePhone: string;\n/**姓名*/\nname: string;\n/**归属组织id*/\norgId: number;\n/**职能类别(FrontLine-一线、NotFrontLine-非一线)*/\nworkType: string;\n}\n/**undefined*/\nexport interface UserCopyVO {\n/**是否复制岗位角色*/\ncopyJobAndRole: number;\n/**是否复制组织权���*/\ncopyOrg: number;\n/**目标用户id*/\nid: number;\n/**要复制的用户id列表*/\nuserIds: undefined[];\n}\n/**undefined*/\nexport interface UserJobQueryVO {\n/**岗位id*/\njobId: number;\n/**关键字*/\nkey: string;\n/**当前页*/\npageNum: number;\n/**每页条数*/\npageSize: number;\n}\n/**undefined*/\nexport interface UserJobRoleVO {\n/**用户id*/\nid: number;\n/**岗位id*/\njobId: number;\n/**角色id数组*/\nroleIds: undefined[];\n}\n/**undefined*/\nexport interface UserOrgVO {\n/**用户id*/\nid: number;\n/**组织id数组*/\norgIds: undefined[];\n}\n/**undefined*/\nexport interface UserQueryVO {\n/**登录账号*/\naccount: string;\n/**用户类型(Ihome-爱家员工、Juheng-居恒员工、Poly-保顾兼职、Channel-渠道用户、Customer-个人客户、Outsourcing-劳务派遣)*/\naccountType: string;\n/**员工工号*/\nemployeeCode: string;\n/**雇员状态(On-在职、Leave-离职)*/\nemployeeStatus: string;\n/**人员类型(Formal-正式工、Probation-试用、Practice-实习、Vacation-暑期工、Rehire-离职返聘)*/\nemployeeType: string;\n/**入职日期止期(yyyy-MM-dd)*/\nemploymentDateEnd: string;\n/**入职日期起期(yyyy-MM-dd)*/\nemploymentDateStart: string;\n/**离职日期止期(yyyy-MM-dd)*/\nleaveDateEnd: string;\n/**离职日期起期(yyyy-MM-dd)*/\nleaveDateStart: string;\n/**手机号码*/\nmobilePhone: string;\n/**姓名*/\nname: string;\n/**归属组织id*/\norgId: number;\n/**当前页*/\npageNum: number;\n/**每页条数*/\npageSize: number;\n/**权限组织id*/\npermissionOrgId: number;\n/**状态(Valid-有效、Invalid-无效)*/\nstatus: string;\n/**职能类别(FrontLine-一线、NotFrontLine-非一线)*/\nworkType: string;\n}\n/**undefined*/\nexport interface UserResourceQueryVO {\n/**关键字*/\nkey: string;\n/**当前页*/\npageNum: number;\n/**每页条数*/\npageSize: number;\n/**资源id*/\nresourceId: number;\n}\n/**undefined*/\nexport interface UserRoleQueryVO {\n/**关键字*/\nkey: string;\n/**当前页*/\npageNum: number;\n/**每页条数*/\npageSize: number;\n/**角色id*/\nroleId: number;\n}\n/**undefined*/\nexport interface UserUpdateVO {\n/**登录账号*/\naccount: string;\n/**用户类型(Ihome-爱家员工、Juheng-居恒员工、Poly-保顾兼职、Channel-渠道用户、Customer-个人客户、Outsourcing-���务派遣)*/\naccountType: string;\n/**email*/\nemail: string;\n/**员工工号*/\nemployeeCode: string;\n/**雇员状态(On-在职、Leave-离职)*/\nemployeeStatus: string;\n/**人员类型(Formal-正式工、Probation-试用、Practice-实习、Vacation-暑期工、Rehire-离职返聘)*/\nemployeeType: string;\n/**入职日期(yyyy-MM-dd)*/\nemploymentDate: string;\n/**id*/\nid: number;\n/**离职日期(yyyy-MM-dd)*/\nleaveDate: string;\n/**手机号码*/\nmobilePhone: string;\n/**姓名*/\nname: string;\n/**归属组织id*/\norgId: number;\n/**职能类别(FrontLine-一线、NotFrontLine-非一线)*/\nworkType: string;\n}\n/**undefined*/\nexport interface UserVO {\n/**登录账号*/\naccount: string;\n/**用户类型(Ihome-爱家员工、Juheng-居恒员工、Poly-保顾兼职、Channel-��道用户、Customer-个人客户、Outsourcing-劳务派遣)*/\naccountType: string;\n/**创建时间(yyyy-MM-dd HH:mm:ss)*/\ncreateTime: string;\n/**创建用户*/\ncreateUser: number;\n/**创建用户姓名*/\ncreateUserName: string;\n/**已删除*/\ndeleted: number;\n/**email*/\nemail: string;\n/**员工工号*/\nemployeeCode: string;\n/**雇员状态(On-在职、Leave-离职)*/\nemployeeStatus: string;\n/**人员类型(Formal-正式工、Probation-试用、Practice-实习、Vacation-暑期工、Rehire-离职返聘)*/\nemployeeType: string;\n/**入职日期(yyyy-MM-dd)*/\nemploymentDate: string;\n/**id*/\nid: number;\n/**岗位id*/\njobId: number;\n/**岗位名称*/\njobName: string;\n/**离职日期(yyyy-MM-dd)*/\nleaveDate: string;\n/**手机号码*/\nmobilePhone: string;\n/**姓名*/\nname: string;\n/**归属组织id*/\norgId: number;\n/**密码*/\npassword: string;\n/**状态(Valid-有效、Invalid-无效)*/\nstatus: string;\n/**更新时间(yyyy-MM-dd HH:mm:ss)*/\nupdateTime: string;\n/**更新用户*/\nupdateUser: number;\n/**更新用户姓名*/\nupdateUserName: string;\n/**职能类别(FrontLine-一线、NotFrontLine-非一线)*/\nworkType: string;\n}\n","/*\r\n * @Descripttion: \r\n * @version: \r\n * @Author: zyc\r\n * @Date: 2020-07-24 17:08:03\r\n * @LastEditors: zyc\r\n * @LastEditTime: 2020-08-01 17:08:04\r\n */\r\ninterface IPageBase {\r\n    pageNum: number,\r\n    pageSize: number,\r\n}\r\nimport { IPageInfo } from \"../api/base.d\";\r\nimport { Vue, Component } from 'vue-property-decorator'\r\ndeclare module 'vue/types/vue' {\r\n    interface Vue {\r\n        /**分页列表的查询参数\r\n         * @param {type} \r\n         * @return: \r\n         */\r\n        queryPageParameters: IPageBase;\r\n        /**返回分页数据\r\n         * @param {type} \r\n         * @return: \r\n         */\r\n        resPageInfo: IPageInfo<any>\r\n    }\r\n}\r\n\r\n/**\r\n* mixins\r\n*/\r\n@Component\r\nexport default class PaginationMixin extends Vue {\r\n    getListMixin() {\r\n        console.error('请在页面中实现getListMixin方法')\r\n        console.log(this.queryPageParameters)\r\n    }\r\n    queryPageParameters: IPageBase = {\r\n        \"pageNum\": 1,\r\n        \"pageSize\": 10,\r\n    }\r\n    resPageInfo: IPageInfo<any> = {\r\n        total: 0,\r\n        list: []\r\n    }\r\n    handleSizeChangeMixin(size: number) {\r\n        console.log('handleSizeChange', size);\r\n        this.queryPageParameters.pageNum = 1;\r\n        this.queryPageParameters.pageSize = size;\r\n        this.getListMixin();\r\n    }\r\n    handleCurrentChangeMixin(pageSize: number) {\r\n        console.log('handleCurrentChange', pageSize);\r\n        this.getListMixin();\r\n    }\r\n}\r\n","/*\r\n * @Descripttion: \r\n * @version: \r\n * @Author: zyc\r\n * @Date: 2020-06-29 16:35:01\r\n * @LastEditors: zyc\r\n * @LastEditTime: 2020-08-01 16:43:44\r\n */\r\nimport axios from 'axios'\r\nimport { Message } from 'element-ui'\r\nimport { UserModule } from '@/store/modules/user'\r\nimport NProgress from 'nprogress'\r\nimport 'nprogress/nprogress.css'\r\nNProgress.configure({ showSpinner: true, minimum: 0.2 })\r\nconst service = axios.create({\r\n    // baseURL: process.env.VUE_APP_BASE_API,\r\n    timeout: 50000\r\n})\r\n\r\n// Request interceptors\r\nservice.interceptors.request.use(\r\n    (config) => {\r\n        console.log(config)\r\n\r\n        // let a = config.url?.includes;\r\n        let url: string = config.url || '';\r\n        if (url.includes('}')) {\r\n            if (config.method == 'get') {\r\n                //对{id}等参数进行替换\r\n                Object.keys(config.params || {}).forEach(k => {\r\n                    let oldStr = '{' + k + '}'\r\n                    let newStr = config.params[k]\r\n                    config.url = url.replace(oldStr, newStr);\r\n                    delete config.params[k];\r\n                })\r\n            } else {\r\n                Object.keys(config.data || {}).forEach(k => {\r\n                    let oldStr = '{' + k + '}'\r\n                    let newStr = config.data[k]\r\n                    config.url = url.replace(oldStr, newStr);\r\n                    delete config.data[k];\r\n                })\r\n\r\n            }\r\n\r\n        }\r\n        // Add X-Access-Token header to every request, you can add other custom headers here\r\n        if (UserModule.token) {\r\n            config.headers['X-Access-Token'] = UserModule.token\r\n        }\r\n        NProgress.start()\r\n        return config\r\n    },\r\n    (error) => {\r\n        Promise.reject(error)\r\n    }\r\n)\r\n\r\n// Response interceptors\r\nservice.interceptors.response.use(\r\n    (response) => {\r\n        NProgress.done()\r\n        if (response.config.url == '/sales-oauth2/token') {\r\n            return response.data\r\n        } else {\r\n            const res = response.data\r\n            if (res.code !== 'Success') {\r\n                Message({\r\n                    message: res.msg,\r\n                    type: 'warning',\r\n                    duration: 5 * 1000\r\n                })\r\n                return Promise.reject(res)\r\n            } else {\r\n                return response.data.data;\r\n            }\r\n        }\r\n\r\n\r\n    },\r\n    (error) => {\r\n        NProgress.done()\r\n\r\n\r\n        if (error.response.status == 401 || error.response.status == 403) {\r\n            Message({\r\n                message: '请重新登录',\r\n                type: 'error',\r\n                duration: 5 * 1000\r\n            })\r\n\r\n        } else {\r\n            var originalRequest = error.config;\r\n            if (error.code == 'ECONNABORTED' && error.message.indexOf('timeout') != -1 && !originalRequest._retry) {\r\n                originalRequest._retry = true;\r\n                console.error('请求超时:' + originalRequest.timeout + ';url=' + originalRequest.url)\r\n                return axios.request(originalRequest);\r\n            }\r\n            let message = '系统异常';\r\n            if (error && error.response) {\r\n                message += error.response.status;\r\n            }\r\n            Message({\r\n                message: message,\r\n                type: 'error',\r\n                duration: 5 * 1000\r\n            })\r\n\r\n            return Promise.reject({\r\n                err: -1,\r\n                error: error\r\n            });\r\n\r\n        }\r\n\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\nexport default service"],"sourceRoot":""}